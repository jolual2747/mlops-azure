name: CI/CD pipeline
run-name: CI/CD pipeline

on:
  push:
    branches: [master]

env:
  IMAGE_NAME: heartdisease
  WORKSPACE: ${{ secrets.WORKSPACE }} 
  WORKSPACE_LOCATION: ${{ secrets.WORKSPACE_LOCATION }} 
  SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }} 
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }} 

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python -m pytest ./tests
  azure-container:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build the Docker image
        run: docker-compose -f docker-compose.yml build
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      - name: AZ ACR login
        run: az acr login --name heartdiseaseapp
      - name: Tag images  
        run: |
          docker tag heartdisease-api:latest heartdiseaseapp.azurecr.io/heartdisease-api:latest
          docker tag heartdisease-front:latest heartdiseaseapp.azurecr.io/heartdisease-front:latest
      - name: Push image to Azure Container Registry 
        run: |
          docker push heartdiseaseapp.azurecr.io/heartdisease-api:latest
          docker push heartdiseaseapp.azurecr.io/heartdisease-front:latest
  azure-deploy:
    needs: azure-container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      - name: Deploy image to containerapp 
        run: |
          az webapp create --resource-group $RESOURCE_GROUP --plan heartdiseaseplan --name heartdiseaseapp --multicontainer-config-type compose --multicontainer-config-file docker-compose-azure.yml